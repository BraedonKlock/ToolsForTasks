package ToolsForTasks;

import java.io.*;
import java.util.*;

public class JobList {
	 static Scanner scanner = new Scanner(System.in);
	 static List<Job> jobList = new ArrayList<>();

	 public static void addJob() {
		 boolean save = true;
		System.out.println("Enter job name(or type \"Exit\"): ");
		String name = scanner.nextLine();
		if (name.equalsIgnoreCase("Exit")) {
			return;
		}
		
		System.out.println("Enter job description:");
		String description = scanner.nextLine();
		if (description.equalsIgnoreCase("Exit")) {
			return;
		}
		
		Job job = new Job(name, description);
		
		while (true) {
			System.out.println("Add a tool? (yes/no):");
			String response = scanner.nextLine();
			
			if (response.equalsIgnoreCase("no")) break;
			
			System.out.println("Tool name(or type \"exit\"):");
			String toolName = scanner.nextLine();
			if (toolName.equalsIgnoreCase("Exit")) {
				continue;
			}
			
			System.out.println("Quantity:");
			String quantity = scanner.nextLine();
			
			Tool tool = new Tool(toolName, quantity);
			job.addTool(tool);
			
		jobList.add(job);
		System.out.println("Job added!\n");
		saveToFile();
		System.out.println("Job saved successfully!\n");
		}
	}
	    public static void editJob() {
	    	 listJobs();

	    	    if (jobList.isEmpty()) return;

	    	    System.out.print("Enter job number to edit: ");
	    	    int index = Integer.parseInt(scanner.nextLine());

	    	    if (index < 0 || index >= jobList.size()) {
	    	        System.out.println("Invalid job number.");
	    	        return;
	    	    }

	    	    Job job = jobList.get(index);

	    	    System.out.println("Editing Job: " + job.getName());

	    	    System.out.print("New name (or press Enter to keep): ");
	    	    String newName = scanner.nextLine();
	    	    if (!newName.isEmpty()) job.setName(newName);

	    	    System.out.print("New description (or press Enter to keep): ");
	    	    String newDesc = scanner.nextLine();
	    	    if (!newDesc.isEmpty()) job.setDescription(newDesc);

	    	    System.out.print("Do you want to edit tools? (yes/no): ");
	    	    String toolEdit = scanner.nextLine();
	    	    
	    	    if (toolEdit.equalsIgnoreCase("yes")) {
	    	        while (true) {
	    	            System.out.print("Do you want to edit a Tool or add a tool? (Edit/Add/Exit): ");
	    	            String action = scanner.nextLine();

	    	            if (action.equalsIgnoreCase("Edit")) {
	    	                List<Tool> tools = job.getTools();

	    	                if (tools.isEmpty()) {
	    	                    System.out.println("No tools to edit.");
	    	                    continue;
	    	                }

	    	                System.out.println("Tools for this job:");
	    	                for (int i = 0; i < tools.size(); i++) {
	    	                    Tool tool = tools.get(i);
	    	                    System.out.println(i + ". Name: " + tool.getName() + " | Quantity: " + tool.getQuantity());
	    	                }

	    	                System.out.print("Enter the tool number to edit: ");
	    	                int toolNumber = Integer.parseInt(scanner.nextLine());

	    	                if (toolNumber < 0 || toolNumber >= tools.size()) {
	    	                    System.out.println("Invalid tool number.");
	    	                    continue;
	    	                }

	    	                Tool selectedTool = tools.get(toolNumber);

	    	                System.out.print("New tool name (or press Enter to keep): ");
	    	                String newToolName = scanner.nextLine();
	    	                if (!newToolName.isEmpty()) {
	    	                    selectedTool.setName(newToolName);
	    	                }

	    	                System.out.print("New quantity (or press Enter to keep): ");
	    	                String newQuantity = scanner.nextLine();
	    	                if (!newQuantity.isEmpty()) {
	    	                    selectedTool.setQuantity(newQuantity);
	    	                }

	    	                System.out.println("Tool updated.");

	    	            } else if (action.equalsIgnoreCase("Add")) {
	    	                System.out.print("Enter tool name: ");
	    	                String toolName = scanner.nextLine();

	    	                System.out.print("Enter quantity: ");
	    	                String quantity = scanner.nextLine();

	    	                job.addTool(new Tool(toolName, quantity));
	    	                System.out.println("Tool added.");
	    	            } else if (action.equalsIgnoreCase("Exit")) {
	    	                break;
	    	            } else {
	    	                System.out.println("Invalid input. Please enter Edit, Add, or Exit.");
	    	            }
	    	        }
	    	    }
	    	    
	    	    saveToFile();
	    	    System.out.println("Job updated.");
	    	}
	      
	    public static void deleteJob() {
	    	  listJobs();

	    	    if (jobList.isEmpty()) return;

	    	    System.out.print("Enter job number to delete: ");
	    	    int index = Integer.parseInt(scanner.nextLine());

	    	    if (index < 0 || index >= jobList.size()) {
	    	        System.out.println("Invalid job number.");
	    	        return;
	    	    }

	    	    Job removed = jobList.remove(index);
	    	    saveToFile();

	    	    System.out.println("Deleted: " + removed.getName());
	    }

	    public static void searchJob() {
	    	if (jobList.isEmpty()) {
	            System.out.println("No jobs to search.");
	            return;
	        }

	        System.out.println("\nEnter any keyword to search (job name, description, or tool name):");
	        String term = scanner.nextLine().toLowerCase();

	        boolean found = false;

	        System.out.println("\nSearch Results:");
	        for (int i = 0; i < jobList.size(); i++) {
	            Job job = jobList.get(i);
	            String jobName = job.getName().toLowerCase();
	            String description = job.getDescription().toLowerCase();
	            StringBuilder toolNames = new StringBuilder();

	            for (Tool tool : job.getTools()) {
	                toolNames.append(tool.getName().toLowerCase()).append(" ");
	            }

	            // Match against all three fields
	            if (jobName.contains(term) || description.contains(term) || toolNames.toString().contains(term)) {
	                System.out.println(i + ". " + job);
	                found = true;
	            }
	        }

	        if (!found) {
	            System.out.println("No jobs found matching \"" + term + "\".");
	        }
	    	
	    }
	    
	    public static void loadFromFile() {
	    	jobList.clear(); // in case you reload during runtime
	    	
	    	try (BufferedReader br = new BufferedReader(new FileReader("jobs.csv"))) {
	    		String line;
	    		while ((line = br.readLine()) != null) {
	    			String[] parts = line.split(",", 3); // only 3 parts: name, description, tools
	    			if (parts.length < 3) continue;
	    			
	    			Job job = new Job(parts[0], parts[1]);
	    			
	    			String[] toolData = parts[2].split("\\|");
	    			for (String toolEntry : toolData) {
	    				String[] toolParts = toolEntry.split(":");
	    				if (toolParts.length == 2) {
	    					job.addTool(new Tool(toolParts[0], toolParts[1]));
	    				}
	    			}
	    			
	    			jobList.add(job);
	    		}
	    		
	    		System.out.println("Jobs loaded from file.");
	    	} catch (IOException e) {
	    		System.out.println("Error loading file: " + e.getMessage());
	    	}
	    }
	    
	    public static void listJobs() {
			  if (jobList.isEmpty()) {
			        System.out.println("No jobs found.");
			        return;
			    }

			    for (int i = 0; i < jobList.size(); i++) {
			        System.out.println(i + ". " + jobList.get(i));
			    }
	    }

	    public static void saveToFile() {
	    	try (FileWriter writer = new FileWriter("jobs.csv")) {
	    		for (Job job : jobList) {
	    			StringBuilder line = new StringBuilder();
	    			line.append(job.getName()).append(",");
	    			line.append(job.getDescription()).append(",");
	    			
	    			List<Tool> tools = job.getTools();
	    			for (int i = 0; i < tools.size(); i++) {
	    				Tool tool = tools.get(i);
	    				line.append(tool.getName()).append(":").append(tool.getQuantity());
	    				if (i < tools.size() - 1) {
	    					line.append("|"); // delimiter between tools
	    				}
	    			}
	    			
	    			writer.write(line.toString() + "\n");
	    		}
	    		
	    		System.out.println("Jobs saved to file.");
	    	} catch (IOException e) {
	    		System.out.println("Error saving file: " + e.getMessage());
	    	}
	    }
}